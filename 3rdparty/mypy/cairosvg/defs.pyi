from .bounding_box import calculate_bounding_box as calculate_bounding_box, is_non_empty_bounding_box as is_non_empty_bounding_box
from .features import match_features as match_features
from .helpers import paint as paint, size as size, transform as transform
from .parser import Tree as Tree
from .shapes import rect as rect
from .surface import cairo as cairo
from .url import parse_url as parse_url
from _typeshed import Incomplete

BLEND_OPERATORS: Incomplete
EXTEND_OPERATORS: Incomplete

def update_def_href(surface, def_name, def_dict) -> None: ...
def parse_all_defs(surface, node) -> None: ...
def parse_def(surface, node) -> None: ...
def gradient_or_pattern(surface, node, name, opacity): ...
def marker(surface, node) -> None: ...
def mask(surface, node) -> None: ...
def filter_(surface, node) -> None: ...
def linear_gradient(surface, node) -> None: ...
def radial_gradient(surface, node) -> None: ...
def pattern(surface, node) -> None: ...
def clip_path(surface, node) -> None: ...
def paint_mask(surface, node, name, opacity) -> None: ...
def draw_gradient(surface, node, name, opacity): ...
def draw_pattern(surface, node, name, opacity): ...
def prepare_filter(surface, node, name) -> None: ...
def apply_filter_before_painting(surface, node, name) -> None: ...
def apply_filter_after_painting(surface, node, name) -> None: ...
def use(surface, node) -> None: ...
